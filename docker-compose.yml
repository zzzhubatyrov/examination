version: '4.19'

services:
    nginx: 
        restart: unless-stopped
        container_name: nginx
        build:
            context: .
            dockerfile: Dockerfile.nginx
        ports:
            - 80:80
        volumes:
            - static_volume:/usr/src/app/django_static
            - media_volume:/usr/src/app/media
            - ./nginx/production:/etc/nginx/conf.d
            - ./frontend:/app
        depends_on: 
            - django
    
    # socket:
    #     restart: unless-stopped
    #     container_name: socket
    #     build:
    #         context: .
    #         dockerfile: Dockerfile.socket
    #     depends_on:
    #         - rmq
    #     env_file:
    #         - ./.env

    django:
        restart: unless-stopped
        container_name: django
        build:
            context: .
            dockerfile: Dockerfile.django
        volumes:
            - static_volume:/usr/src/app/django_static
            - ./backend:/usr/src/app
            - media_volume:/usr/src/app/media
        expose:
            - 8000
        depends_on:
            - postgres
        env_file:
            - ./.env

    postgres:
        image: postgres:16.1-alpine
        container_name: POSTGRESQL_DB
        volumes:
          - ./postgres/migration:/docker-entrypoint-initdb.d
          - ./postgres/data:/var/lib/postgresql/data

        environment:
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          - POSTGRES_DB=${POSTGRES_DB}
          - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
        env_file:
            - ./.env
        ports:
            - 5432:5432
    #     healthcheck:
    #       test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
    #       interval: 10s
    #       timeout: 3s
    #       retries: 3

    # grafana:
    #   image: grafana/grafana
    #   ports:
    #     - 3000:3000
    #   volumes:
    #     - "./config/provisioning:/etc/grafana/provisioning"
    #     - "./config/custom.ini:/etc/grafana/custom.ini"
    #     - "./dashboards:/var/lib/grafana/dashboards"

    # prometheus:
    #   image: prom/prometheus
    #   ports:
    #     - 9090:9090
    #   volumes:
    #     - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

    # postgres-exporter:
    #   image: prometheuscommunity/postgres-exporter
    #   ports:
    #     - 9187:9187
    #   env_file:
    #       - ./.env
    #   #environment:
    #     #DATA_SOURCE_NAME: PROMETHEUS_URL
    #     #DATA_SOURCE_NAME: "postgresql://postgres:10Zabrodivshiy/kompot09@POSTGRESQL_DB:5432/helpdesk?sslmode=disable"
    #   links:
    #     - postgres
    #     - prometheus
    # pgadmin:
    #     image: dpage/pgadmin4:
    #     environment:
    #         - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
    #         - PGADMIN_DEFAULT_PASSWORD=123QWE
    #         - PGADMIN_LISTEN_PORT=15432
    #     ports:
    #     - 15432:15432
    #     volumes:
    #         - pgadmin:/var/lib/pgadmin
    #     depends_on:
    #         - postgres

volumes:
    static_volume: {}
    media_volume: {}
    # postgres_volume: {}
    pgadmin: {}
    # rabbitmq_data_volume: {}
